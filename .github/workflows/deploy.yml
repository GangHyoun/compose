name: docker, ci/cd, ec2, hub

on: 
    push:
        branches:
            - dev

jobs:
    docker-cicd:
        runs-on: ubuntu-latest
        steps:
            # 소스코드 체크아웃
            - name: 소스코드 checkout
              uses: actions/checkout@v4

            # jdk17 설치
            - name: jdk 17 설치
              uses: actions/setup-java@v4
              with:
                  distribution: 'temurin'
                  java-version: '17'

            # 필요 시 현재까지 환경 수시 확인 가능 -> 리눅스 명령어 (로그 체크)
            - name: 현재 상황 체크
              run: |
                  pwd
                  ls

            # 환경변수 동적 세팅 X (여기서는 제외)
            # 빌드, 단위 테스트 -> 도커 파일에서 진행(생략)

            # 도커 관련 액션 -> 도커 작업을 위한 환경
            - name: 도커 작업을 진행하기 위한 액션 적용
              uses: docker/setup-buildx-action@v3

            # 도커 허브 -> 프로필 -> ... -> 액세스 토큰 발급
            # 토큰 발급 : 프로필 -> account settings -> security -> personal access token
            #           -> Generate new access token -> 설정(이름, 기간, 권한) 후 generate
            # 도커 허브 로그인 -> 계정 정보 ->
            # 시크릿 변수(깃허브 : HUB_DOCKER_TOKEN, HUB_DOCKER_NAME, EC2_HOST, EC2_USER, EC2_KEY)
            - name: 도커 허브 로그인
              run: echo "${{secrets.HUB_DOCKER_TOKEN}}" | docker login -u "${{secrets.HUB_DOCKER_NAME}}" --password-stdin

          # 백엔드 이미지 생성 -> 허브(레퍼지토리) 푸시
            - name: 백엔드 이미지 생성 -> 허브(레퍼지토리) 푸시
              run: |
                docker build -t ganghyoun/demo_backend ./backend
                docker push ganghyoun/demo_backend

          # 프런트 이미지 생성 -> 허브(레퍼지토리) 푸시
            - name: 프런트 이미지 생성 -> 허브(레퍼지토리) 푸시
              run: |
                docker build -t ganghyoun/demo_frontend ./frontend
                docker push ganghyoun/demo_frontend
                

          # 리눅스에 도커 설치
                # 시스템 패키지 업데이트
                # sudo apt-get update
                # 필요한 패키지 설치
                # sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
                # Docker의 공식 GPG키를 추가
                # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                # Docker의 공식 apt 저장소를 추가
                # sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                # 시스템 패키지 업데이트
                # sudo apt-get update
                # Docker 설치
                # sudo apt-get install docker-ce docker-ce-cli containerd.io -y


            # EC2 서버로 필요 파일 업로드(YML, nginx/*.conf)
            # Ec2 생성 -> 탄력적 ip 연결 > 활성화 이후
            # EC2 접속
            # docker-compose.yml, ./nginx/default.conf 업로드
            # 타겟 : /home/ubuntu
            - name: EC2 서버로 필요 파일 업로드
              uses: appleboy/scp-action@v0.1.7
              # 업로드 대상이 n 개이면 |로 구성 파일, 파일, ... 표현 (너무 많으면 압축 후 풀기)
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_USER }}
                key: ${{ secrets.EC2_KEY }}
                source: |
                  docker-compose.yml,
                  ./nginx/default.conf
                target: /home/ubuntu

      #deploy:
        # 도커 컴포즈 수정 필요
      # 도커 컴포즈 진행


